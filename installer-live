#!/bin/bash

# Install applications we need to build the environment.
apt-get --yes install debootstrap syslinux isolinux squashfs-tools genisoimage xorriso memtest86+ rsync wget ca-certificates

CWD=$(pwd)

#----------------------------------------------------------#
#                      Configuration                       #
#----------------------------------------------------------#
# Defaults
BASE_DIR="/usr/share/raspbian-live"
LIVE_ARCH="i386"
LIVE_DISTRO="jessie"
KERNEL_VERSION="3.16.0-4-586"

# Load configuration
if [ -f /etc/raspbian-live ]; then
    # Base directory
    config_var=$(awk '/BASE_DIR=/' /etc/raspbian-live | sed 's/BASE_DIR=//' )
    if [ -n "$config_var" ];then
        BASE_DIR="$config_var"
    fi
    
    # Architecture
    config_var=$(awk '/ARCH=/' /etc/raspbian-live | sed 's/ARCH=//' )
    if [ -n "$config_var" ];then
        LIVE_ARCH="$config_var"
    fi

    # Distro
    config_var=$(awk '/DISTRO=/' /etc/raspbian-live | sed 's/DISTRO=//' )
    if [ -n "$config_var" ];then
        LIVE_DISTRO="$config_var"
    fi
    
    # Kernel version
    config_var=$(awk '/KERNEL=/' /etc/raspbian-live | sed 's/KERNEL=//' )
    if [ -n "$config_var" ];then
        KERNEL_VERSION="$config_var"
    fi
fi

#----------------------------------------------------------#
#                    Base environment                      #
#----------------------------------------------------------#
# Remove the chroot if it already exists
if [ -d $BASE_DIR/chroot ]; then
    rm -rf $BASE_DIR/chroot
fi

# Setup the base Debian environment
debootstrap --arch=$LIVE_ARCH --variant=minbase $LIVE_DISTRO $BASE_DIR/chroot http://ftp.us.debian.org/debian/
if [ $? -ne 0 ]; then
    echo "Error: debootstrap failed."
    exit 1
fi

# Chroot installer
if [ -f $BASE_DIR/chroot/root/installer-chroot ]; then
    rm $BASE_DIR/chroot/root/installer-chroot
fi

wget https://raw.githubusercontent.com/JPG-Consulting/PiManagerLive/development/installer-chroot -O $BASE_DIR/chroot/root/installer-chroot
if [ $? -ne 0 ]; then
    echo "Error: Failed to download chroot installer."
    exit 1
fi

chown root:root $BASE_DIR/chroot/root/installer-chroot
chmod +x $BASE_DIR/chroot/root/installer-chroot

sed -i -E "s/^KERNEL_VERSION=.+/KERNEL_VERSION=\"$KERNEL_VERSION\"/" $BASE_DIR/chroot/root/installer-chroot

# A couple of important steps before we chroot
mount -o bind /dev $BASE_DIR/chroot/dev
cp /etc/resolv.conf $BASE_DIR/chroot/etc/resolv.conf

#----------------------------------------------------------#
#                 Read/Write Filesystem                    #
#----------------------------------------------------------#
if [ -f $BASE_DIR/raspberrypi-fs ]; then
    rm -f $BASE_DIR/raspberrypi-fs
fi

dd if=/dev/zero of=$BASE_DIR/raspberrypi-fs bs=600MB count=1
mkfs.vfat -F 32 $BASE_DIR/raspberrypi-fs

if [ ! -d $BASE_DIR/chroot/usr/share/raspberrypi ]; then
    mkdir -p $BASE_DIR/chroot/usr/share/raspberrypi
fi

mount $BASE_DIR/raspberrypi-fs $BASE_DIR/chroot/usr/share/raspberrypi

#----------------------------------------------------------#
#                         Chroot                           #
#----------------------------------------------------------#
# Chroot to our Debian environment and install
chroot $BASE_DIR/chroot /bin/bash -x <<'EOF'
mount none -t proc /proc
mount none -t sysfs /sys
mount none -t devpts /dev/pts
export HOME=/root
export LC_ALL=C
apt-get update
apt-get install dialog dbus --yes --force-yes
dbus-uuidgen > /var/lib/dbus/machine-id

# Call the downloaded installer
/root/installer-chroot

# Clean up our Debian environment before leaving.
rm -f /var/lib/dbus/machine-id
apt-get clean
rm -rf /tmp/*
umount -lf /proc
umount -lf /sys
umount -lf /dev/pts
exit
EOF

#----------------------------------------------------------#
#                        Clean up                          #
#----------------------------------------------------------#
# Unmount dev from the chroot
umount -lf $BASE_DIR/chroot/dev
rm $BASE_DIR/chroot/etc/resolv.conf

# Unmount the read/write filesystem
umount $BASE_DIR/chroot/usr/share/raspberrypi

rm $BASE_DIR/chroot/root/installer-chroot

#----------------------------------------------------------#
#                 CD/USB Image creation                    #
#----------------------------------------------------------#
# Make directories that will be copied to our bootable medium.
mkdir -p $BASE_DIR/image/{live,isolinux}

# Compress the chroot environment into a Squash filesystem.
mksquashfs $BASE_DIR/chroot $BASE_DIR/image/live/filesystem.squashfs -e boot

# Prepare our USB/CD bootloader. 
cp $BASE_DIR/chroot/boot/vmlinuz-$KERNEL_VERSION $BASE_DIR/image/live/vmlinuz
if [ $? -ne 0 ]; then
    echo "Error: Failed to copy kernel image."
    exit 1
fi

cp $BASE_DIR/chroot/boot/initrd.img-$KERNEL_VERSION $BASE_DIR/image/live/initrd
if [ $? -ne 0 ]; then
    echo "Error: Failed to copy initrd."
    exit 1
fi

echo "UI menu.c32" > $BASE_DIR/image/isolinux/isolinux.cfg 
echo "" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "prompt 0" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "menu title Debian Live" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "timeout 300" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "label live-debian" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  menu label ^Debian Live" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  menu default" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  kernel /live/vmlinuz" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  append initrd=/live/initrd boot=live persistence quiet" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "label live-debian-failsafe" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  menu label ^Debian Live (failsafe)" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  kernel /live/vmlinuz" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "  append initrd=/live/initrd boot=live persistence config memtest noapic noapm nodma nomce nolapic nomodeset nosmp nosplash vga=normal" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "" >> $BASE_DIR/image/isolinux/isolinux.cfg 
echo "endtext" >> $BASE_DIR/image/isolinux/isolinux.cfg 

cp /usr/lib/ISOLINUX/isolinux.bin $BASE_DIR/image/isolinux/
cp /usr/lib/syslinux/modules/bios/hdt.c32 $BASE_DIR/image/isolinux/
cp /usr/lib/syslinux/modules/bios/ldlinux.c32 $BASE_DIR/image/isolinux/
cp /usr/lib/syslinux/modules/bios/libcom32.c32 $BASE_DIR/image/isolinux/
cp /usr/lib/syslinux/modules/bios/libutil.c32 $BASE_DIR/image/isolinux/
cp /usr/lib/syslinux/modules/bios/menu.c32 $BASE_DIR/image/isolinux/

# Build CD
cd $BASE_DIR && xorriso -as mkisofs -r -J -joliet-long -l -cache-inodes -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin -partition_offset 16 -A "Debian Live"  -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o debian-live.iso image

mv $BASE_DIR/debian-live.iso $CWD/debian-live.iso
rm -rf $BASE_DIR/image

#----------------------------------------------------------#
#                Install helper scripts                    #
#----------------------------------------------------------#
if [ -f /usr/sbin/chroot-live ]; then
    rm /usr/sbin/chroot-live
fi
wget https://raw.githubusercontent.com/JPG-Consulting/PiManagerLive/development/sbin/chroot-live -O /usr/sbin/chroot-live
chmod +x /usr/sbin/chroot-live
chown root:root /usr/sbin/chroot-live

if [ -f /usr/sbin/build-live-image ]; then
    rm /usr/sbin/build-live-image
fi
wget https://raw.githubusercontent.com/JPG-Consulting/PiManagerLive/development/sbin/build-live-image -O /usr/sbin/build-live-image
chmod +x /usr/sbin/build-live-image
chown root:root /usr/sbin/build-live-image

echo ""
echo "Done."
echo ""
