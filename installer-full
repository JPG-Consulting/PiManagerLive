#!/bin/bash

# Sources:
# http://wiki.osdev.org/Loopback_Device#Creating_an_image

SUITE="jessie"
MIRROR="http://ftp.us.debian.org/debian/"
GIT_REPOSITORY="https://raw.githubusercontent.com/JPG-Consulting/PiManagerLive"
GIT_BRANCH="development"

function loop_device_cleanup()
{
    # Unmount
    umount /mnt/liveusb
    
    # Delete loop device
    losetup -d /dev/loop1
}

function chroot_cleanup()
{
    # Unmount dev from the chroot
    umount -lf /mnt/liveusb/dev
    rm /mnt/liveusb/etc/resolv.conf
    rm -rf /mnt/liveusb/tmp/*
}
          
# Current working directory
CWD=$(pwd)

PACKAGES="linux-image-486 $PACKAGES"

#----------------------------------------------------------#
#                      Configuration                       #
#----------------------------------------------------------#

# Load configuration
if [ -f /tmp/raspbian-manager-installer/installer.conf ]; then

    # Suite/Distro
    config_var=$(awk '/SUITE=/' /tmp/raspbian-manager-installer/installer.conf | sed 's/SUITE=//' )
    if [ -n "$config_var" ];then
        SUITE="$config_var"
    fi

fi

#----------------------------------------------------------#
#                       Loop Device                        #
#----------------------------------------------------------#

# Create the initial image file (700MB)
if [ -f /tmp/raspberry-manager.img ]; then
  rm /tmp/raspberry-manager.img
fi

cylinders=2000
dd if=/dev/zero of=/tmp/raspberry-manager.img bs=516096c count=$cylinders

# Create the partition and set it bootable
fdisk -u -C$cylinders -S63 -H16 /tmp/raspberry-manager.img <<EOF
n
p
1


a
w
EOF

partition_start=$(fdisk -l /tmp/raspberry-manager.img | awk '/^Device/{p=1;next}; p{gsub(/[^[:digit:]]/, "", $2); print $3}')
partition_end=$(fdisk -l /tmp/raspberry-manager.img | awk '/^Device/{p=1;next}; p{gsub(/[^[:digit:]]/, "", $2); print $4}')

# Add partition to loopback driver
losetup -o $(( $partition_start * 512 )) --sizelimit $(( $partition_end * 512 )) /dev/loop1 /tmp/raspberry-manager.img

# Format the partition (ext3 or ext2)
mkfs.ext3 /dev/loop1

# Mount the partition
if [ ! -d /mnt/liveusb ]; then
  mkdir /mnt/liveusb
fi

mount /dev/loop1 /mnt/liveusb

# Install applications we need to build the environment.
apt-get --yes install debootstrap  rsync wget ca-certificates

# Setup the base Debian environment
debootstrap --arch=i386 --variant=minbase $SUITE /mnt/liveusb $MIRROR
if [ $? -ne 0 ]; then
    loop_device_cleanup
    echo "Error: Unable to debootstrap"
    exit 1
fi

# Download the common chroot installation script
if [ ! -d /mnt/liveusb/tmp/raspbian-manager-installer ]; then
    mkdir -p /mnt/liveusb/tmp/raspbian-manager-installer
fi

wget $GIT_REPOSITORY/$GIT_BRANCH/installer-chroot -O /mnt/liveusb/tmp/raspbian-manager-installer/installer-chroot
if [ $? -ne 0 ]; then
    loop_device_cleanup
    echo "Error: Unable to download chroot environment installer."
    exit 1
fi

chown root:root /mnt/liveusb/tmp/raspbian-manager-installer/installer-chroot
chmod +x /mnt/liveusb/tmp/raspbian-manager-installer/installer-chroot

# copy the installer configurtion file so it is accessible from chroot
if [ -f /tmp/raspbian-manager-installer/installer.conf ]; then
    if [ ! -d /mnt/liveusb/tmp/raspbian-manager-installer ]; then
        mkdir -p /mnt/liveusb/tmp/raspbian-manager-installer
    fi
    cp /tmp/raspbian-manager-installer/installer.conf /mnt/liveusb/tmp/raspbian-manager-installer/installer.conf
fi

# A couple of important steps before we chroot
mount -o bind /dev /mnt/liveusb/dev
cp /etc/resolv.conf /mnt/liveusb/etc/resolv.conf

chroot /mnt/liveusb /bin/bash -x <<'EOF'
mount none -t proc /proc
mount none -t sysfs /sys
mount none -t devpts /dev/pts
export HOME=/root
export LC_ALL=C
apt-get update
apt-get install dialog dbus --yes --force-yes
dbus-uuidgen > /var/lib/dbus/machine-id
/tmp/raspbian-manager-installer/installer-chroot
exit
EOF

# Chroot specific settings for full install
chroot /mnt/liveusb /bin/bash -x <<'EOF'
apt-get --yes install grub
grub-install /dev/loop1
update-grub
exit
EOF

chroot /mnt/liveusb /bin/bash -x <<'EOF'
rm -f /var/lib/dbus/machine-id
apt-get clean
umount -lf /proc
umount -lf /sys
umount -lf /dev/pts
exit
EOF

# Cleanup
chroot_cleanup
loop_device_cleanup

# Move the image file
mv /tmp/raspberry-manager.img $CWD

#----------------------------------------------------------#
#                 Install helper scripts                   #
#----------------------------------------------------------#

if [ -f $CWD/chroot-live-usb ]; then
    rm $CWD/chroot-live-usb
fi
wget $GIT_REPOSITORY/$GIT_BRANCH/scripts/chroot-live-usb -O $CWD/chroot-live-usb
chmod +x $CWD/chroot-live-usb
