#!/bin/bash

SUITE="jessie"
MIRROR="http://ftp.us.debian.org/debian/"
BASE_PACKAGES="bc ca-certificates dosfstools gcc git-core ifupdown isc-dhcp-client 
               locales-all make nano net-tools openssh-client parted rsync sudo wget 
               wireless-tools"

function loop_device_cleanup()
{
    # Unmount
    umount /mnt/liveusb
    
    # Delete loop device
    losetup -d /dev/loop1
}

function chroot_cleanup()
{
    # Unmount dev from the chroot
    umount -lf /mnt/liveusb/dev
    rm /mnt/liveusb/etc/resolv.conf
    rm -rf /mnt/liveusb/tmp/*
}
          
# Current working directory
CWD=$(pwd)

PACKAGES="linux-image-486 $PACKAGES"

#----------------------------------------------------------#
#                       Loop Device                        #
#----------------------------------------------------------#

# Create the initial image file (700MB)
if [ -f /tmp/raspberry-manager.img ]; then
  rm /tmp/raspberry-manager.img
fi

dd if=/dev/zero of=/tmp/raspberry-manager.img bs=512 count=1400000

# Create the partition and set it bootable
fdisk /tmp/raspberry-manager.img <<EOF
n
p
1


a
w
EOF

partition_start=$(fdisk -l /tmp/raspberry-manager.img | awk '/^Device/{p=1;next}; p{gsub(/[^[:digit:]]/, "", $2); print $3}')
partition_end=$(fdisk -l /tmp/raspberry-manager.img | awk '/^Device/{p=1;next}; p{gsub(/[^[:digit:]]/, "", $2); print $4}')

# Add partition to loopback driver
losetup -o $(( $partition_start * 512 )) --sizelimit $(( $partition_end * 512 )) /dev/loop1 /tmp/raspberry-manager.img

# Format the partition
mkfs.ext4 /dev/loop1

# Mount the partition
if [ ! -d /mnt/liveusb ]; then
  mkdir /mnt/liveusb
fi

mount /dev/loop1 /mnt/liveusb

# Install applications we need to build the environment.
apt-get --yes install debootstrap  rsync wget ca-certificates

# Setup the base Debian environment
debootstrap --include="$BASE_PACKAGES" --arch=i386 --variant=minbase $SUITE /mnt/liveusb $MIRROR
if [ $? -ne 0 ]; then
    loop_device_cleanup
    echo "Error: Unable to debootstrap"
    exit 1
fi

# A couple of important steps before we chroot
mount -o bind /dev /mnt/liveusb/dev
cp /etc/resolv.conf /mnt/liveusb/etc/resolv.conf

chroot /mnt/liveusb /bin/bash -x <<'EOF'
mount none -t proc /proc
mount none -t sysfs /sys
mount none -t devpts /dev/pts
export HOME=/root
export LC_ALL=C
exit
EOF

chroot /mnt/liveusb /bin/bash -x <<'EOF'
useradd -m -d /home/pi -s /bin/bash pi
adduser pi sudo
echo -e "raspberry\nraspberry\n" | passwd pi
echo -e "raspberry\nraspberry\n" | passwd root
exit
EOF

chroot /mnt/liveusb /bin/bash -x <<'EOF'
apt-get --yes install grub
grub-install /dev/loop1
update-grub
exit
EOF

chroot /mnt/liveusb /bin/bash -x <<'EOF'
apt-get clean
umount -lf /proc
umount -lf /sys
umount -lf /dev/pts
exit
EOF

# Cleanup
chroot_cleanup
loop_device_cleanup

# Move the image file
mv /tmp/raspberry-manager.img $CWD
